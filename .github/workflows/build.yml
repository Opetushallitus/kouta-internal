name: Kouta-internal

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout read
  security-events: write # Required for trivy results

env:
  DOCKER_BUILD_DIR: '/tmp/docker_build'
  ARTIFACT_NAME: 'kouta-internal'
  BASE_IMAGE: 'utility/baseimage-fatjar-openjdk11:master'
  ARTIFACT_DEST_PATH: '/usr/local/bin'

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
          cache: 'maven'

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Helsinki"
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: kouta-internal-build
          aws-region: eu-west-1

      - name: Login to ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build with Maven
        run: |
          cd postgresql/docker
          docker build --tag koutainternal-postgres .
          cd -
          mvn clean package -B

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: target
          key: ${{ github.sha }}

  deploy-container:
    needs: test-and-build
    uses: Opetushallitus/ci-tools/.github/workflows/push-scan-java-ecr.yml@reusable-workflows
    with:
      application: 'kouta-internal'
      base-image: 'utility/baseimage-fatjar-openjdk11:master'
      configfolder: 'src/main/resources/*'
      jarfile: 'kouta-internal-*-with-dependencies.jar'
    secrets: inherit